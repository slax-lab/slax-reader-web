name: Deploy Worker
on:
  push:
    branches:
      - master
      - develop
      - beta

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create .npmrc
        run: |
          npm install -g pnpm
          echo "//npm.pkg.github.com/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "//npm.pkg.github.com/:always-auth=true" >> .npmrc
          pnpm config set '//npm.pkg.github.com/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Publish to Cloudflare Production
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_PROD_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_PROD_ACCOUNT_ID }}
        run: |
          pnpm wrangler d1 migrations apply slax-reader-backend --local -c ./config/prod.toml
          pnpm wrangler d1 migrations apply slax-reader-backend --remote -c ./config/prod.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --local -c ./config/prod.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --remote -c ./config/prod.toml
          pnpm run gen:model
          pnpm wrangler deploy --minify -c ./config/prod.toml

      - name: Publish to Cloudflare Beta
        if: ${{ github.ref == 'refs/heads/beta' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_PROD_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_PROD_ACCOUNT_ID }}
        run: |
          pnpm wrangler d1 migrations apply slax-reader-backend --local -c ./config/beta.toml
          pnpm wrangler d1 migrations apply slax-reader-backend --remote -c ./config/beta.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --local -c ./config/beta.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --remote -c ./config/beta.toml
          pnpm run gen:model
          pnpm wrangler deploy --minify -c ./config/beta.toml

      - name: Publish to Cloudflare Preview
        if: ${{ github.ref == 'refs/heads/develop' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_TEST_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_TEST_ACCOUNT_ID }}
        run: |
          pnpm wrangler d1 migrations apply slax-reader-backend --local -c ./config/dev.toml
          pnpm wrangler d1 migrations apply slax-reader-backend --remote -c ./config/dev.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --local -c ./config/dev.toml
          pnpm wrangler d1 migrations apply slax-reader-backend-fulltext --remote -c ./config/dev.toml
          pnpm run gen:model
          pnpm wrangler deploy --minify -c ./config/dev.toml
